'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _classCallCheck = _interopDefault(require('@babel/runtime/helpers/classCallCheck'));
var _possibleConstructorReturn = _interopDefault(require('@babel/runtime/helpers/possibleConstructorReturn'));
var _getPrototypeOf = _interopDefault(require('@babel/runtime/helpers/getPrototypeOf'));
var _assertThisInitialized = _interopDefault(require('@babel/runtime/helpers/assertThisInitialized'));
var _inherits = _interopDefault(require('@babel/runtime/helpers/inherits'));
var _wrapNativeSuper = _interopDefault(require('@babel/runtime/helpers/wrapNativeSuper'));

function formatErrorMessage(msg, additional) {
  return additional.length ? additional.reduce(function (a, c) {
    return "".concat(a, "\n").concat(JSON.stringify(c));
  }, msg) : msg;
}

var BaseError =
/*#__PURE__*/
function (_Error) {
  _inherits(BaseError, _Error);

  function BaseError(err) {
    var _this;

    _classCallCheck(this, BaseError);

    for (var _len = arguments.length, additional = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      additional[_key - 1] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseError).call(this, formatErrorMessage(err, additional)));

    if (err instanceof Error) {
      _this.original = err;
      _this.stack = err.stack;
      _this.message = formatErrorMessage(err.message, additional);
    } else {
      if (Error.captureStackTrace) {
        Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);
      }

      _this.message = formatErrorMessage(err, additional);
    }

    _this.name = _this.constructor.name;
    return _this;
  }

  return BaseError;
}(_wrapNativeSuper(Error));

module.exports = BaseError;
